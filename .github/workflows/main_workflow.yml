name: Main Trigger Workflow
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Clone the repo
      - name: Clone repository
        uses: actions/checkout@v3
      # Cache node modules
      - name: Cache node modules
        uses: actions/cache@v3  
        with:
          path: ./frontend/node_modules
          key: yarn-deps-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-${{ hashFiles('yarn.lock') }}
      - name: Install React App dependencies
        run: yarn install 
        working-directory: ./frontend               
      # Test the React app
      # - name: Test static build
      #   run: yarn test 
      #   working-directory: ./frontend    
      # # Build the React app
      - name: Create React Application
        run: yarn build && pwd && ls -altr 
        working-directory: ./frontend
      # Upload the artifact for other stages to use
      - name: Share artifact in github workflow
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: frontend/build
  

    name: "Perform Terraform Destroy"
    if: always()
    runs-on: ubuntu-latest
    needs: terraform-apply
    timeout-minutes: 1440
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    environment:
      name: dissertation-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve          
  setup_matrix:
    strategy:
      max-parallel: 1
      matrix:
        aws_region: ["us-east-1", us-east-2]
  call_deployment_workflow:
    needs: setup_matrix
    strategy:
      max-parallel: 1
      matrix: ${{ fromJSON(needs.setup_matrix.outputs.aws_region) }}
    uses: ./.github/workflows/deployment_workflow.yml
     with:
      aws_region: ${{ matrix.aws_region }}
    